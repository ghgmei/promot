<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		actionBarVisible="false" overlayControls="false" tabBarVisible="false" title="SYNC"  creationComplete="formloaded()">
	
	<fx:Script>

		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.IndexChangeEvent;
			
			public var dbFile:File;
			public var dbConnection:SQLConnection;
			public var selectQuery:SQLStatement;
			public var selectQuery2:SQLStatement;
			public var updateQuery:SQLStatement;
			
		
		public function onDatabaseOpen(evt:SQLEvent):void
			
		{
			
			
			trace("Database is open");
			
		}
			 
			
			private function onQueryResult(evt:SQLEvent):void
			{
			
			var eligibilityArray:ArrayCollection = new ArrayCollection(selectQuery.getResult().data);				
				
			eList.dataProvider = eligibilityArray;		
			
		    // define eligibility parameters to send
			status.text="Please choose a form to manually sync then wait.";
			
			trace("Length = "+eligibilityArray.length+"");
			
			statusind.visible = false;
			
			if(eligibilityArray.length == 0)
			{
				//close db connection
				dbConnection.close();
				
				// push to patientSync view
				navigator.pushView(SyncVisits);
			}
			

				
		}
			
		
		private function onDatabaseClose(evt:SQLEvent):void
			
		{
			trace("Database is closed");
		}
		
		
		
		protected function formloaded():void
		{
			
			backButton.enabled = true;
			
			trace("Begin DB connection");
			
			//connects to Db
			
			dbFile = File.applicationStorageDirectory.resolvePath("prompt_local.db");
			dbConnection = new SQLConnection();
			dbConnection.addEventListener(SQLEvent.OPEN, onDatabaseOpen)
			dbConnection.addEventListener(SQLEvent.CLOSE, onDatabaseClose);
			
			// open database
			dbConnection.open(dbFile);
			
			var statement:SQLStatement = new SQLStatement();
			statement.sqlConnection = dbConnection;
			statement.text ="CREATE TABLE IF NOT EXISTS patient_data (id INTEGER PRIMARY KEY AUTOINCREMENT, patientid TEXT, dateAdded TEXT, hemoglobin TEXT, hf TEXT, familyName TEXT, fname TEXT, nationality TEXT, nationalityOther TEXT, country TEXT, age TEXT, ageType TEXT, sex TEXT, mobile1 TEXT, mobile2 TEXT, pregnant TEXT, weight TEXT, q12 TEXT, q12a TEXT, q12a_other TEXT, q13 TEXT, q14 TEXT, q15 TEXT, q16 TEXT, q16_other TEXT, q17 TEXT, q17_other TEXT, q17a TEXT, q17a_other TEXT, q17b TEXT, q17c TEXT, q17c_other TEXT, q17d TEXT, q17d_other TEXT, q18a TEXT, q18a_other TEXT, q18b TEXT, q18b_other TEXT, q18c TEXT, g6pd TEXT, g6pdtp TEXT, g6pdrt TEXT, bst TEXT, guardian TEXT, tabletId TEXT, interviewer TEXT, day7 TEXT, cField TEXT)";
			
			statement.execute();
			
			
			trace("Searching patient_data");
			
			/**
			 * Loads data from local database with check field set to 1
			 * ______________________________________________________
			 * 1 = saved to local with no server connection
			 * 0 = saved to local with server connection
			 * 2 = saved to local with manual sync 
			 * */
			
			// check if db exists, then create if doesnt 
			
			selectQuery = new SQLStatement();
			selectQuery.sqlConnection = dbConnection;
			selectQuery.text ="SELECT * FROM patient_data WHERE cField = 1 ORDER BY id ASC";
			selectQuery.addEventListener(SQLEvent.RESULT, onQueryResult);
			
			selectQuery.execute();
			
		
		}
			
		private function resultHandler1(event):void
		{
			
			
			statusind.visible = false;
			
			status.text="Form submitted";
			
			
			backButton.enabled = true;
			
			updateQuery = new SQLStatement();
			updateQuery.sqlConnection = dbConnection;
			updateQuery.text ="UPDATE patient_data SET cField = 2 WHERE id = '"+eList.selectedItem.id+"'";
			//.addEventListener(SQLEvent.RESULT, onQueryResult2);
			
			updateQuery.execute();
			
			// close db connection
			dbConnection.close();
			
			// push to same view to see if more records are on list
			navigator.pushView(SyncPatients);	
				
			
		
		}
		private function faultHandler1(event):void
		{
			
			status.text="Error submitting form, please try again in a little while.";
			backButton.enabled = true;
			statusind.visible = false;
			
		}
			
			
			protected function eList_changeHandler(event:IndexChangeEvent):void
			{
				
				statusind.visible = true;
				
				status.text="Please wait...";
				
				backButton.enabled = false;
				
				
				trace("patient id = "+eList.selectedItem.patientid+"");
				
				var param:Object = new Object;
							
				param.patientid=eList.selectedItem.patientid;
				param.dateAdded = eList.selectedItem.dateAdded;
				param.hemoglobin=eList.selectedItem.hemoglobin;
				param.hf=eList.selectedItem.hf;
				param.ewqr3=eList.selectedItem.familyName;
				param.dfverg=eList.selectedItem.fname;
				param.nationality=eList.selectedItem.nationality;
				param.nationalityOther=eList.selectedItem.nationalityOther;
				param.country=eList.selectedItem.country;
				param.age=eList.selectedItem.age;
				param.ageType=eList.selectedItem.ageType;
				param.sex=eList.selectedItem.sex;
				param.mobile1=eList.selectedItem.mobile1;
				param.mobile2=eList.selectedItem.mobile2;
				param.pregnant=eList.selectedItem.pregnant;
				param.weight=eList.selectedItem.weight;
				param.q12=eList.selectedItem.q12;
				param.q12a=eList.selectedItem.q12a;
				param.q12a_other=eList.selectedItem.q12a_other;
				param.q13=eList.selectedItem.q13;
				param.q14=eList.selectedItem.q14;
				param.q15=eList.selectedItem.q15;
				param.q16=eList.selectedItem.q16;
				param.q16_other=eList.selectedItem.q16_other;
				param.q17=eList.selectedItem.q17;
				param.q17_other=eList.selectedItem.q17_other;
				param.q17a=eList.selectedItem.q17a;
				param.q17a_other=eList.selectedItem.q17a_other;
				param.q17b=eList.selectedItem.q17b;
				param.q17c=eList.selectedItem.aq17c;
				param.q17c_other=eList.selectedItem.q17c_other;
				param.q17d=eList.selectedItem.q17d;
				param.q17d_other=eList.selectedItem.q17d_other;
				param.q18a=eList.selectedItem.q18a;
				param.q18a_other=eList.selectedItem.q18a_other;
				param.q18b=eList.selectedItem.q18b;
				param.q18b_other=eList.selectedItem.q18b_other;
				param.q18c=eList.selectedItem.q18c;
				param.g6pd=eList.selectedItem.g6pd;
				param.g6pdtp=eList.selectedItem.g6pdtp;
				param.g6pdrt=eList.selectedItem.g6pdrt;
				param.bst=eList.selectedItem.bst;
				param.guardian=eList.selectedItem.guardian;
				param.tabletId=eList.selectedItem.tabletId;
				param.interviewer=eList.selectedItem.interviewer;
				param.day7=eList.selectedItem.day7;
				param.fynder='e5e67619fd6399281c9381bd0e13dbe0add3c04fddc55f5aafd287148781f350a96aa8f5bab7af6d705eb5421b4d6861b8b6ba3b57a21f0491686e25404ec302';		
				
								
				// submit
				trace("sending data");
				dataSend.send(param);	
				
				
				
			
				
			}
			
			
			
			
				
			
		]]>
	</fx:Script>
	
	
	<fx:Declarations>

		<s:HTTPService id="dataSend" 
					   url="http://prompt.app-king.net/new2.php" 
					   method="POST"
					  result="resultHandler1(event)"
					   resultFormat="text"
					   contentType="application/x-www-form-urlencoded"
					   requestTimeout = "10"
					   fault="faultHandler1(event)" > 
			
			
		</s:HTTPService>
		
		
		
	</fx:Declarations>
	
	<s:Label y="121" color="#232323" fontSize="30" fontWeight="normal" horizontalCenter="0"
			 text="Submit patient data to local study server." textAlign="center"/>
	<s:Label id="status" y="454" color="#232323" fontSize="30" fontWeight="bold"
			 horizontalCenter="0" text="Loading forms..."
			 textAlign="center" verticalAlign="middle"/>
	<s:Button id="backButton" y="1290" left="30" right="30" height="150" label="&lt; Back"
			  click="navigator.pushView(DashboardView)" fontSize="70"/>
	<s:Label top="40" color="#0074EA" fontSize="55" fontWeight="bold" horizontalCenter="0"
			 text="Manual Sync"/>
	<s:BusyIndicator id="statusind" y="191" width="213" height="213" horizontalCenter="0"/>
	<s:List id="eList" y="513" left="0" right="0" height="736" change="eList_changeHandler(event)"
			horizontalCenter="0">
		<s:AsyncListView list="{data.lastResult}"/>
		
		<s:itemRenderer>
			<fx:Component>
				<s:IconItemRenderer
					label="Patient form for {data.fname} {data.familyName}"
					messageField="patientid"/>
			</fx:Component>
		</s:itemRenderer>
		
</s:List>

</s:View>
